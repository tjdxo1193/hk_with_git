<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lims.api.sc.dao.SearchForMonitorTestDao">
    <select id="find" parameterType="SearchForMonitorTestVO" resultType="SearchForMonitorTestVO">
        SELECT MMAP.PLNT_CD,
        MMAP.MITM_SPEC_IDX,
        MMS.MITM_CD,
        SCT1.TREE_NM AS MITM_PITM_DIV_NM,
        MMAP.MITM_REQ_IDX,
        MMAP.ANS_PROC_CD,
        (SELECT DTL_NM
        FROM SY_CD_DTL SCD
        WHERE SCD.PLNT_CD = #{plntCd}
        AND SCD.USE_YN = 'Y'
        AND SCD.DTL_CD = MMAP.ANS_PROC_CD) AS ANS_PROC_NM,
        MMAP.REQ_NO,
        MMAP.REQ_DT,
        MMAP.ANS_EDT,
        MMAP.ANS_NO,
        MMAP.REQ_DPT_CD,
        (SELECT DPT_NM FROM SY_DPT WHERE PLNT_CD = #{plntCd} AND DPT_CD = REQ_DPT_CD) AS REQ_DPT_NM,
        MMAP.RCP_DT,
        MMAP.ASS_NO,
        MMAP.ASS_DT,
        MMAP.RJT_DS,
        MMAP.RJT_REA,
        MMAP.RJT_UID,
        (SELECT USER_NM FROM SY_USER WHERE PLNT_CD = #{plntCd} AND USER_ID = MMAP.RJT_UID) AS RJT_NM,
        MMAP.HLD_DS,
        MMAP.HLD_UID,
        (SELECT USER_NM FROM SY_USER WHERE PLNT_CD = #{plntCd} AND USER_ID = HLD_UID) AS HLD_NM,
        MMAP.HLD_REA,
        MMAP.ANS_CANL_DS,
        MMAP.ANS_CANL_UID,
        (SELECT USER_NM FROM SY_USER WHERE PLNT_CD = #{plntCd} AND USER_ID = ANS_CANL_UID) AS ANS_CANL_NM,
        MMAP.ANS_CANL_REA,
        MM.MITM_WRK_PLC_DIV,
        (SELECT TREE_NM FROM SY_CD_TREE WHERE PLNT_CD = #{plntCd} AND TREE_CD = MITM_WRK_PLC_DIV) AS
        MITM_WRK_PLC_DIV_NM,
        MM.MITM_PITM_DIV,
        SCT2.TREE_NM AS MITM_PITM_DIV_NM,
        MM.POINT,
        MM.ROOMNO,
        MM.CRG_DPT_CD,
        (SELECT DPT_NM FROM SY_DPT WHERE PLNT_CD = #{plntCd} AND DPT_CD = CRG_DPT_CD) AS CRG_DPT_NM,
        MM.ANS_CYL_CD,
        (SELECT ANS_CYL_MARK_NM
        FROM SY_ANS_CYL
        WHERE PLNT_CD = #{plntCd} AND DEL_YN = 'N' AND ANS_CYL_CD = MM.ANS_CYL_CD) AS ANS_CYL_NM
        FROM MT_MITM_ANS_PROC MMAP
        LEFT JOIN MM_MITM_SPEC MMS ON MMAP.PLNT_CD = MMS.PLNT_CD AND MMAP.MITM_SPEC_IDX = MMS.MITM_SPEC_IDX
        LEFT JOIN MM_MITM MM ON MMS.PLNT_CD = MM.PLNT_CD AND MMS.MITM_CD = MM.MITM_CD
        LEFT JOIN SY_CD_TREE SCT1 ON MM.PLNT_CD = SCT1.PLNT_CD AND MM.MITM_PITM_DIV = SCT1.TREE_CD
        LEFT JOIN SY_CD_TREE SCT2 ON MM.PLNT_CD = SCT2.PLNT_CD AND MM.MITM_WRK_PLC_DIV = SCT2.TREE_CD
        LEFT JOIN SY_CD_TREE SCT3 ON SCT2.PLNT_CD = SCT3.PLNT_CD AND SCT2.HIR_TREE_CD = SCT3.TREE_CD
        WHERE MMAP.PLNT_CD = #{plntCd}
        <choose>
            <when test='testDiv == "hold"'>
                AND MMAP.HLD_YN = 'Y'
            </when>
            <when test='testDiv == "cancel"'>
                AND MMAP.ANS_PROC_CD = 'S0131000'
            </when>
        </choose>
        <if test="ansProcCd != ''">
            AND MMAP.ANS_PROC_CD = #{ansProcCd}
        </if>
        <if test="upperMitmPitmDiv != ''">
            AND SCT1.HIR_TREE_CD = #{upperMitmPitmDiv}
        </if>
        <if test="point != null and point != ''">
            AND TRIM(UPPER(MM.POINT)) LIKE ('%' || TRIM(UPPER(#{point})) || '%')
        </if>
        <if test="grade != null and grade != ''">
            AND TRIM(UPPER(MM.GRADE)) LIKE ('%' || TRIM(UPPER(#{grade})) || '%')
        </if>
        <if test="roomno != null and roomno != ''">
            AND TRIM(UPPER(MM.ROOMNO)) LIKE ('%' || TRIM(UPPER(#{roomno})) || '%')
        </if>
        <if test="mitmWrkPlcDiv != ''">
            AND SCT2.TREE_CD = #{mitmWrkPlcDiv}
        </if>
        <if test="mitmCd != null and mitmCd != ''">
            AND TRIM(UPPER(MM.MITM_CD)) LIKE ('%' || TRIM(UPPER(#{mitmCd})) || '%')
        </if>
        <if test="mitmPitmDiv != null and mitmPitmDiv != ''">
            AND MM.MITM_PITM_DIV = #{mitmPitmDiv}
        </if>
        <if test="upperMitmWrkPlcDiv != ''">
            AND SCT3.TREE_CD = #{upperMitmWrkPlcDiv}
        </if>
        <if test="mitmWrkStudioDiv != ''">
            AND SCT3.HIR_TREE_CD = #{mitmWrkStudioDiv}
        </if>
        <if test="rcpDtList.size() > 0">
            AND MMAP.RCP_DT BETWEEN #{rcpDtList[0]} AND #{rcpDtList[1]}
        </if>
        <if test="reqDtList.size() > 0">
            AND MMAP.REQ_DT BETWEEN #{reqDtList[0]} AND #{reqDtList[1]}
        </if>
        ORDER BY MMAP.REQ_DT DESC
    </select>

    <select id="findSpec" parameterType="SearchForMonitorTestVO" resultType="SearchForMonitorTestVO">
        SELECT MMAR.PLNT_CD,
               MMAR.MITM_REQ_IDX,
               MMAR.RST_SEQ,
               (SELECT DTL_NM FROM SY_CD_DTL SCD WHERE SCD.DTL_CD = MMAR.RST_PROC_CD)      AS RST_PROC_NM,
               MMAR.ISP_DUR_TM,
               MMAR.EQM_USE_TM,
               MMAR.ANS_EQM_CD,
               MMAR.AMITM_CD,
               (SELECT VRIA_KN FROM MS_AMITM MA WHERE MA.AMITM_CD = MMAR.AMITM_CD)         AS VRIA_KN,
               (SELECT VRIA_NO FROM MS_AMITM MA WHERE MA.AMITM_CD = MMAR.AMITM_CD)         AS VRIA_NO,
               (SELECT AITM_KN
                FROM MS_AITM
                WHERE AITM_CD =
                      (SELECT AITM_CD FROM MS_AMITM MA WHERE MA.AMITM_CD = MMAR.AMITM_CD)) AS AITM_KN,
               MMAR.SMP_CLLT_QTY,
               MMAR.SMP_CLLT_UNIT,
               (SELECT DTL_NM
                FROM SY_CD_DTL SCD
                WHERE SCD.DTL_CD = MMAR.SMP_CLLT_UNIT)                                     AS SMP_CLLT_UNIT_NM,
               MMAR.SMP_CLLT_DT,
               MMAR.CLLT_TM_STR,
               MMAR.CLLT_TM_END,
               (SELECT DTL_NM FROM SY_CD_DTL SCD WHERE SCD.DTL_CD = MMAR.RST_JDG)          AS RST_JDG_NM,
               MMAR.RST_RMK,
               MMAR.PERSPEC_TXT,
               MMAR.OWC_SPEC_TXT,
               MMAR.SPEC_TXT_EN,
               MMAR.PER_SLV_LOW,
               MMAR.PER_SLV_UPP,
               MMAR.PER_SLV_DESC,
               MMAR.OWC_SLV_LOW,
               MMAR.OWC_SLV_UPP,
               MMAR.OWC_SLV_DESC,
               MMAR.RST_DPNT,
               MMAR.RPT_PRT_SLV_VAL,
               MMAR.RPT_PRT_ITM_NM,
               MMAR.RST_VAL,
               MMAR.MARK_VAL,
               (SELECT DPT_NM
                FROM SY_DPT SD
                WHERE SD.DPT_CD = MMAR.ANS_DPT_CD
                  AND SD.PLNT_CD = MMAR.PLNT_CD)                                           AS ANS_DPT_NM,
               DECODE(MMAR.RPT_PRT_YN, 'Y', '출력함', '출력안함')                                 AS RPT_PRT_YN,
               (SELECT DTL_NM FROM SY_CD_DTL SCD WHERE SCD.DTL_CD = MMAR.SPEC_TYP)         AS SPEC_TYP_NM,
               (SELECT DTL_NM FROM SY_CD_DTL SCD WHERE SCD.DTL_CD = MMAR.JDG_TYP)          AS JDG_TYP_NM,
               (SELECT DTL_NM
                FROM SY_CD_DTL SCD
                WHERE SCD.DTL_CD = MMAR.SLV_JDG_CFM
                  AND SCD.PLNT_CD = MMAR.PLNT_CD)                                          AS SLV_JDG_CFM_NM,
               (SELECT DTL_NM
                FROM SY_CD_DTL SCD
                WHERE SCD.DTL_CD = MMAR.SLV_JDG_NON_CFM
                  AND SCD.PLNT_CD = MMAR.PLNT_CD)                                          AS SLV_JDG_NON_CFM_NM,
               (SELECT DTL_NM
                FROM SY_CD_DTL SCD
                WHERE SCD.DTL_CD = MMAR.RST_UNIT_CD
                  AND SCD.PLNT_CD = MMAR.PLNT_CD)                                          AS RST_UNIT_NM
        FROM MT_MITM_ANS_RST MMAR
        WHERE PLNT_CD = #{plntCd}
          AND MMAR.MITM_REQ_IDX = #{mitmReqIdx}
        ORDER BY MMAR.RST_SEQ
    </select>
</mapper>