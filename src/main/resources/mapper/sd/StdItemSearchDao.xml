<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lims.api.sd.dao.StdItemSearchDao">

    <select id="findAll" parameterType="StandardMaterialVO" resultType="StandardMaterialVO">
        SELECT
            A.PLNT_CD,
            A.RITM_ETR_IDX,
            (SELECT TREE_CD FROM SY_CD_TREE WHERE TREE_CD = E.HIR_TREE_CD AND PLNT_CD = E.PLNT_CD) AS UPPER_RITM_TREE_CD,
            (SELECT LTRIM(SYS_CONNECT_BY_PATH(TREE_NM, '.'), '.')
            FROM SY_CD_TREE
            WHERE TREE_CD = E.HIR_TREE_CD
            START WITH HIR_TREE_CD = 'R0000000' AND PLNT_CD = E.PLNT_CD
            CONNECT BY PRIOR TREE_CD = HIR_TREE_CD AND PLNT_CD = E.PLNT_CD) AS UPPER_RITM_TREE_NM,
            A.RITM_ROOT_CD,
            (SELECT TREE_NM FROM SY_CD_TREE WHERE TREE_CD = A.RITM_ROOT_CD AND PLNT_CD = A.PLNT_CD) AS RITM_ROOT_NM,
            A.RITM_CD,
            A.RITM_KN,
            A.RITM_EN,
            A.RITM_ABBR,
            A.RITM_CRG_UID,
            (SELECT USER_NM FROM SY_USER WHERE USER_ID = A.RITM_CRG_UID) AS RITM_CRG_NM,
            A.MNG_NO,
            A.ETR_PROC_CD,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.ETR_PROC_CD) AS ETR_PROC_NM,
            A.STRG_TERMS,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.STRG_TERMS AND PLNT_CD = A.PLNT_CD) AS STRG_TERMS_NM,
            A.STRG_PLA,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.STRG_PLA AND PLNT_CD = A.PLNT_CD) AS STRG_PLA_NM,
            A.STRG_PLA_DTL,
            A.RITM_UNIT_CD,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.RITM_UNIT_CD AND PLNT_CD = A.PLNT_CD) AS RITM_UNIT_NM,
            A.SFY_STOK,
            A.ETR_QTY,
            A.ETR_EACH_QTY,
            A.ETR_TOT_QTY,
            A.VDR_CD,
            D.VDR_NM,
            D.VDR_CRG_NM,
            D.VDR_CRG_TEL,
            A.MAK_DT,
            A.MAK_NO,
            A.ETR_DT,
            A.ETR_RMK,
            A.EXPIR_DT_CHK,
            A.OPN_BEF_EXPIR_DT,
            A.OPN_AFT_EXPIR_TRM,
            A.CURR_LOT_YN,
            A.ETR_REQ_APR_IDX,
            A.RJT_UID,
            A.RJT_DS,
            A.RJT_REA,
            A.DEL_UID,
            A.DEL_DS,
            A.DEL_REA,
            A.DEL_YN,
            A.CRT_IP,
            A.CRT_DS,
            A.CRT_UID,
            A.UDT_IP,
            A.UDT_DS,
            A.UDT_UID,
            A.SPEC,
            A.CAS_NO,
            A.FOMU,
            A.SHADE_YN,
            A.MTR_DEDUT_YN,
            A.POIS_YN,
            A.DANG_YN,
            A.FILE_IDX,
            B.STD_MOIS,
            B.STD_NB,
            B.STD_CTET_CD,
            B.STD_CTET_VAL,
            B.STD_CTET_UNIT_CD,
            B.STD_ASIS_CTET_NM,
            B.STD_ASIS_CTET_VAL,
            B.STD_ASIS_CTET_UNIT_CD,
            B.STD_RMTR_MAK_NO,
            B.STD_RMTR_ANS_NO,
            C.APR_YN,
            NVL((SELECT SUM(A.ETR_EACH_QTY)
                FROM RT_RITM_MNG AA
                WHERE A.RITM_ETR_IDX = AA.RITM_ETR_IDX AND A.ETR_PROC_CD = #{etrProcCd} AND AA.MNG_PROC_CD != #{processCodeList[1]}
                GROUP BY A.RITM_ETR_IDX),0) AS LEFT_OVER_STOK,
            NVL((SELECT SUM(A.ETR_EACH_QTY)
                FROM RT_RITM_MNG AA
                WHERE A.RITM_ETR_IDX = AA.RITM_ETR_IDX AND A.ETR_PROC_CD = #{etrProcCd} AND AA.MNG_PROC_CD = #{processCodeList[0]}
                GROUP BY A.RITM_ETR_IDX),0) AS OPENED_STOK
            FROM RT_RITM_ETR A
            JOIN RT_RITM_ETR_INFO_STD B ON A.RITM_ETR_IDX = B.RITM_ETR_IDX
            JOIN SY_CD_TREE E ON A.RITM_ROOT_CD = E.TREE_CD AND A.PLNT_CD = E.PLNT_CD
            LEFT OUTER JOIN SY_APR_INFO C ON A.ETR_REQ_APR_IDX = C.APR_IDX
            LEFT OUTER JOIN RM_RITM_VDR D ON A.VDR_CD = D.VDR_CD
        WHERE A.PLNT_CD = #{plntCd} AND A.DEL_YN = 'N'
        <if test="upperRitmTreeCd != null and upperRitmTreeCd != ''">
            AND E.HIR_TREE_CD = #{upperRitmTreeCd}
        </if>
        <if test="ritmTreeCd != null and ritmTreeCd != ''">
            AND A.RITM_ROOT_CD = #{ritmTreeCd}
        </if>
        <if test="ritmKn != null and ritmKn != ''">
            AND A.RITM_KN LIKE '%' || UPPER(#{ritmKn}) || '%'
        </if>
        <if test="searchMakDt != null and searchMakDt != ''">
            AND A.MAK_DT BETWEEN #{searchMakDt[0]} AND #{searchMakDt[1]}
        </if>
        <if test="mngNo != null and mngNo != ''">
            AND A.MNG_NO LIKE '%' || UPPER(#{mngNo}) || '%'
        </if>
        <if test="makNo != null and makNo != ''">
            AND A.MAK_NO LIKE '%' || UPPER(#{makNo}) || '%'
        </if>
        <choose>
            <when test='etrReqAprYn == "Y"'>
                AND A.ETR_REQ_APR_IDX IS NOT NULL AND C.APR_YN = 'Y'
            </when>
            <when test='etrReqAprYn == "N"'>
                AND A.ETR_REQ_APR_IDX IS NOT NULL AND C.APR_YN = 'N'
            </when>
        </choose>
        <if test="vdrNm != null and vdrNm != ''">
            AND D.VDR_NM LIKE '%' || UPPER(#{vdrNm}) || '%'
        </if>
        ORDER BY A.RITM_ETR_IDX
    </select>

    <select id="findAllByRitmEtrIdx" parameterType="StandardMaterialVO" resultType="StandardMaterialVO">
        SELECT
            A.PLNT_CD,
            A.RITM_ETR_IDX,
            (SELECT TREE_CD FROM SY_CD_TREE WHERE TREE_CD = E.HIR_TREE_CD AND PLNT_CD = E.PLNT_CD) AS UPPER_RITM_TREE_CD,
            (SELECT TREE_NM FROM SY_CD_TREE WHERE TREE_CD = E.HIR_TREE_CD AND PLNT_CD = E.PLNT_CD) AS UPPER_RITM_TREE_NM,
            A.RITM_ROOT_CD,
            (SELECT TREE_NM FROM SY_CD_TREE WHERE TREE_CD = A.RITM_ROOT_CD AND PLNT_CD = E.PLNT_CD) AS RITM_ROOT_NM,
            A.RITM_CD,
            A.RITM_KN,
            A.RITM_EN,
            A.RITM_ABBR,
            A.RITM_CRG_UID,
            A.MNG_NO,
            A.ETR_PROC_CD,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.ETR_PROC_CD) AS ETR_PROC_NM,
            A.STRG_TERMS,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.STRG_TERMS AND PLNT_CD = A.PLNT_CD) AS STRG_TERMS_NM,
            A.STRG_PLA,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.STRG_PLA AND PLNT_CD = A.PLNT_CD) AS STRG_PLA_NM,
            A.STRG_PLA_DTL,
            A.RITM_UNIT_CD,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.RITM_UNIT_CD AND PLNT_CD = A.PLNT_CD) AS RITM_UNIT_NM,
            A.SFY_STOK,
            A.ETR_QTY,
            A.ETR_EACH_QTY,
            A.ETR_TOT_QTY,
            A.VDR_CD,
            D.VDR_NM,
            D.VDR_CRG_NM,
            D.VDR_CRG_TEL,
            A.MAK_DT,
            A.MAK_NO,
            A.ETR_DT,
            A.ETR_RMK,
            A.EXPIR_DT_CHK,
            A.OPN_BEF_EXPIR_DT,
            A.OPN_AFT_EXPIR_TRM,
            A.CURR_LOT_YN,
            A.ETR_REQ_APR_IDX,
            A.SPEC,
            A.CAS_NO,
            A.FOMU,
            A.SHADE_YN,
            A.MTR_DEDUT_YN,
            A.POIS_YN,
            A.DANG_YN,
            B.STD_MOIS,
            B.STD_NB,
            B.STD_CTET_CD,
            B.STD_CTET_VAL,
            B.STD_CTET_UNIT_CD,
            B.STD_ASIS_CTET_NM,
            B.STD_ASIS_CTET_VAL,
            B.STD_ASIS_CTET_UNIT_CD,
            B.STD_RMTR_MAK_NO,
            B.STD_RMTR_ANS_NO,
            F.RITM_MNG_IDX,
            F.RITM_ETR_IDX,
            F.RITM_ETR_NO,
            F.MNG_PROC_CD,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = F.MNG_PROC_CD) AS MNG_PROC_NM,
            F.RITM_LABEL_NO,
            F.OPN_DT,
            F.EXPIR_DT,
            F.OPN_RMK,
            F.OPN_UID,
            F.OPN_DS,
            F.OPN_CANL_UID,
            F.OPN_CANL_DS,
            F.OPN_CANL_REA,
            F.DPS_REQ_APR_IDX,
            F.RJT_UID,
            F.RJT_DS,
            F.RJT_REA,
            TO_CHAR(G.APR_DS, 'YYYY-MM-DD') AS DPS_DT,
            F.DPS_REA
        FROM RT_RITM_ETR A
        JOIN RT_RITM_ETR_INFO_STD B ON A.RITM_ETR_IDX = B.RITM_ETR_IDX
        JOIN SY_CD_TREE E ON A.RITM_ROOT_CD = E.TREE_CD AND A.PLNT_CD = E.PLNT_CD
        JOIN RT_RITM_MNG F ON A.RITM_ETR_IDX = F.RITM_ETR_IDX
        LEFT OUTER JOIN RM_RITM_VDR D ON A.VDR_CD = D.VDR_CD
        LEFT OUTER JOIN SY_APR_INFO G ON F.DPS_REQ_APR_IDX = G.APR_IDX
        WHERE F.RITM_ETR_IDX = #{ritmEtrIdx}
        ORDER BY F.RITM_MNG_IDX
    </select>

    <select id="findAllByRitmMngIdx" parameterType="StandardMaterialVO" resultType="StandardMaterialVO">
        SELECT
            A.PLNT_CD,
            A.RITM_ETR_IDX,
            (SELECT TREE_CD FROM SY_CD_TREE WHERE TREE_CD = E.HIR_TREE_CD AND PLNT_CD = E.PLNT_CD) AS UPPER_RITM_TREE_CD,
            (SELECT TREE_NM FROM SY_CD_TREE WHERE TREE_CD = E.HIR_TREE_CD AND PLNT_CD = E.PLNT_CD) AS UPPER_RITM_TREE_NM,
            A.RITM_ROOT_CD,
            (SELECT TREE_NM FROM SY_CD_TREE WHERE TREE_CD = A.RITM_ROOT_CD AND PLNT_CD = A.PLNT_CD) AS RITM_ROOT_NM,
            A.RITM_CD,
            A.RITM_KN,
            A.RITM_EN,
            A.RITM_ABBR,
            A.RITM_CRG_UID,
            A.MNG_NO,
            A.ETR_PROC_CD,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.ETR_PROC_CD) AS ETR_PROC_NM,
            A.STRG_TERMS,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.STRG_TERMS AND PLNT_CD = A.PLNT_CD) AS STRG_TERMS_NM,
            A.STRG_PLA,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.STRG_PLA AND PLNT_CD = A.PLNT_CD) AS STRG_PLA_NM,
            A.STRG_PLA_DTL,
            A.RITM_UNIT_CD,
            (SELECT DTL_NM FROM SY_CD_DTL WHERE DTL_CD = A.RITM_UNIT_CD AND PLNT_CD = A.PLNT_CD) AS RITM_UNIT_NM,
            A.SFY_STOK,
            A.ETR_QTY,
            A.ETR_EACH_QTY,
            A.ETR_TOT_QTY,
            A.VDR_CD,
            D.VDR_NM,
            D.VDR_CRG_NM,
            D.VDR_CRG_TEL,
            A.MAK_DT,
            A.MAK_NO,
            A.ETR_DT,
            A.ETR_RMK,
            A.EXPIR_DT_CHK,
            A.OPN_BEF_EXPIR_DT,
            A.OPN_AFT_EXPIR_TRM,
            A.CURR_LOT_YN,
            A.ETR_REQ_APR_IDX,
            A.SPEC,
            A.CAS_NO,
            A.FOMU,
            A.SHADE_YN,
            A.MTR_DEDUT_YN,
            A.POIS_YN,
            A.DANG_YN,
            B.STD_MOIS,
            B.STD_NB,
            B.STD_CTET_CD,
            B.STD_CTET_VAL,
            B.STD_CTET_UNIT_CD,
            B.STD_ASIS_CTET_NM,
            B.STD_ASIS_CTET_VAL,
            B.STD_ASIS_CTET_UNIT_CD,
            B.STD_RMTR_MAK_NO,
            B.STD_RMTR_ANS_NO,
            F.RITM_MNG_IDX,
            F.RITM_ETR_IDX,
            F.RITM_ETR_NO,
            F.MNG_PROC_CD,
            F.RITM_LABEL_NO,
            F.OPN_DT,
            F.EXPIR_DT,
            F.OPN_RMK,
            F.OPN_UID,
            F.OPN_DS,
            F.OPN_CANL_UID,
            F.OPN_CANL_DS,
            F.OPN_CANL_REA,
            F.DPS_REQ_APR_IDX,
            F.RJT_UID,
            F.RJT_DS,
            F.RJT_REA,
            G.USE_SEQ,
            G.PITM_NM,
            G.ANS_NO,
            G.MAK_NO,
            G.AITM_NM,
            G.USE_UID,
            (SELECT USER_NM FROM SY_USER WHERE USER_ID = G.USE_UID) AS USE_NM,
            G.USE_DT,
            G.USE_QTY,
            G.USE_PPS,
            G.USE_RMK,
            G.DEL_YN,
            (A.ETR_EACH_QTY - (SELECT SUM(USE_QTY) FROM RT_RITM_USE WHERE RITM_MNG_IDX = F.RITM_MNG_IDX)) AS LEFT_OVER_STOK
        FROM RT_RITM_ETR A
        JOIN RT_RITM_ETR_INFO_STD B ON A.RITM_ETR_IDX = B.RITM_ETR_IDX
        JOIN SY_CD_TREE E ON A.RITM_ROOT_CD = E.TREE_CD AND A.PLNT_CD = E.PLNT_CD
        JOIN RT_RITM_MNG F ON A.RITM_ETR_IDX = F.RITM_ETR_IDX
        JOIN RT_RITM_USE G ON F.RITM_MNG_IDX = G.RITM_MNG_IDX
        LEFT OUTER JOIN RM_RITM_VDR D ON A.VDR_CD = D.VDR_CD
        WHERE F.RITM_ETR_IDX = #{ritmEtrIdx} AND G.RITM_MNG_IDX = #{ritmMngIdx}
        <if test="delYn != null and delYn != ''">
            AND G.DEL_YN = #{delYn}
        </if>
        ORDER BY F.RITM_MNG_IDX
    </select>

</mapper>
